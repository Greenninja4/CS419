
=======================GOOD SO FAR============================
Ray
Vector3D
Matrix
GeometricObject (has commented out functions)
ShadeRec (idk what the commented out include statements are)
Plane
Sphere
Triangle (has commented out BBox)
World (didn't type Renderer from github, do setters and getters need to delete old pointers?)
	World::render_scene() needs to have sampler support added
Tracer

======================POSSIBLY IMPLEMENT============================
Samplers
Shadow Hit -> slighlty optimized b/c it stops as soon as it hits something


========================MP SPECIFICATIONS===========================

MP1:
--Orthographic Projection
--Perspective Projection
--Sampling
--Shading (Diffuse) w/ directional light

MP2:
--OBJ & PLY
--Spatial Data Structure (KD-Tree, BVH, Octree)
--Shadows
--Point Lights
--Phong Shading -> Diffuse AND Specular

--Renders (Lots of spheres, triangle mesh) w/ shadows, phong, point lights
--Report (1 para, table w/ time to render)
----Mesh w/o acceleration
----Mesh w/ acceleration
----3 Scenes of different magnitude of spheres

--Readme.txt (all code I didn't write / adapted)


============================QUESTIONS==============================
--clone?
--virtual?
--mutable?
--forward declarations? (See book shaderec.h)
--pass by const reference?
--class protection
--world.cpp -> why do delete_objects call objects.erase()
--setters and getters for super classes (makes it a bit easier when inheritence is big so you don't have add fields to subclass constructors
--Initializer lists format
--Order of big 5/6 (def, reg, copy, destr, ass, clone)
--Include statements order
--Make everything getters and setter? Or is that too slow?

Default Constructor
Regular Constructor
Copy Constructor
Assignment Operator
Destructor
Clone / Deep Copy

